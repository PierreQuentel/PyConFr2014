@title Brython - Python dans le navigateur
@pagenum True

Brython (Python dans le navigateur)
===================================

<h3 style="padding-top:50px;padding-left:100px;">
Pierre Quentel

PyConFR le 26 octobre 2014

</h3>



../..
Pourquoi Brython ?
==================

**Brython (Browser Python) a pour objectif de remplacer Javascript par Python 
comme langage de programmation des navigateurs web**

../..
Pourquoi Brython ?
==================

**Brython (Browser Python) a pour objectif de remplacer Javascript par Python 
comme langage de programmation des navigateurs web**

- Javascript est verbeux et bizarre (this..)
 - d'où le succès des frameworks jQuery, angular.js, prototype...

../..
Pourquoi Brython ?
==================

**Brython (Browser Python) a pour objectif de remplacer Javascript par Python 
comme langage de programmation des navigateurs web**

- Javascript est verbeux et bizarre (this..)
 - d'où le succès des frameworks jQuery, angular.js, prototype...

- sérieux risque de marginalisation de Python par Javascript
 
 - avec HTML5, de plus en plus de webapps donc de développeurs Javascript
 - JS arrive côté serveur (node.js)

../..
Pourquoi Brython ?
==================

**Brython (Browser Python) a pour objectif de remplacer Javascript par Python 
comme langage de programmation des navigateurs web**

- Javascript est verbeux et bizarre (this..)
 - d'où le succès des frameworks jQuery, angular.js, prototype...

- sérieux risque de marginalisation de Python par Javascript
 
 - avec HTML5, de plus en plus de webapps donc de développeurs Javascript
 - JS arrive côté serveur (node.js)

- aucune fatalité au monopole de Javascript sur le navigateur

 - le DOM est explicitement indépendant de tout langage
../..
Avant Brython
=============

Au démarrage du projet (printemps 2012) :

- Skulpt : console Python v2 dans le navigateur, mais pas d'interface avec le
  navigateur (API DOM) pour programmer des applications Web client

- PyJS (ex-Pyjamas) : port de GWT, cycle de développement plus lourd

../..
Objectifs
=========

Développer en Python aussi simplement qu'en Javascript : code Python intégré
dans la page HTML

    <script type="text/python">
    print("Python c'est mieux que Javascript")
    </script>


../..
Objectifs
=========

Développer en Python aussi simplement qu'en Javascript : code Python intégré
dans la page HTML

    <script type="text/python">
    print("Python c'est mieux que Javascript")
    </script>

ou par insertion d'un script

    <script type="text/python" src="script.py"></script>


../..
Objectifs
=========

Développer en Python aussi simplement qu'en Javascript : code Python intégré
dans la page HTML

    <script type="text/python">
    print("Python c'est mieux que Javascript")
    </script>

ou par insertion d'un script

    <script type="text/python" src="script.py"></script>

une interface compatible avec le Document Object Model

    element = document.getElementById("element_id")


../..
Objectifs
=========

Développer en Python aussi simplement qu'en Javascript : code Python intégré
dans la page HTML

    <script type="text/python">
    print("Python c'est mieux que Javascript")
    </script>

ou par insertion d'un script

    <script type="text/python" src="script.py"></script>

une interface compatible avec le Document Object Model

    element = document.getElementById("element_id")

mais avec des alternatives plus pythoniques

    element = document["element_id"]


../..
Utiliser Python dans une page HTML
==================================

<table>
<tr>
<td>
<pre style="background-color:#FFF;color:#66F;padding:10px;width:380px;font-size:17px;"><b>
&lt;html&gt;

&lt;head&gt;
<br><span style="background-color:#FF0;"> &lt;script src="brython.js"&gt;&lt;/script&gt;
</span>
<br> &lt;/head&gt;

&lt;body <span style="background-color:#FF0;">onload="brython()"</span>&gt;

&lt;script <span style="background-color:#FF0;">type="text/python"</span>&gt;
<br> from browser import alert
<br> alert('coucou !')
<br> &lt;/script&gt;

&lt;/body&gt;

&lt;/html&gt;
</b></pre>
</td>
<td>
<pre style="color:#FFF;padding:10px;width:330px;font-size:17px;"><b>
&nbsp;

&nbsp;
&nbsp;
&nbsp;
&nbsp;

&nbsp;
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;

</b></pre>
</td>
</tr>
</table>
../..
Utiliser Python dans une page HTML
==================================

<table>
<tr>
<td>
<pre style="background-color:#FFF;color:#66F;padding:10px;width:380px;font-size:17px;"><b>
&lt;html&gt;

&lt;head&gt;
<br><span style="background-color:#FF0;"> &lt;script src="brython.js"&gt;&lt;/script&gt;
</span>
<br> &lt;/head&gt;

&lt;body <span style="background-color:#FF0;">onload="brython()"</span>&gt;

&lt;script <span style="background-color:#FF0;">type="text/python"</span>&gt;
<br> from browser import alert
<br> alert('coucou !')
<br> &lt;/script&gt;

&lt;/body&gt;

&lt;/html&gt;
</b></pre>
</td>
<td>
<pre style="color:#FFF;padding:10px;width:330px;font-size:17px;"><b>
&nbsp;

&nbsp;
<br>charge Brython, met le nom **brython**
&nbsp;
<br>dans l'espace de noms Javascript

&nbsp;
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;

&nbsp;

&nbsp;
</b></pre>
</td>
</tr>
</table>

../..
Utiliser Python dans une page HTML
==================================

<table>
<tr>
<td>
<pre style="background-color:#FFF;color:#66F;padding:10px;width:380px;font-size:17px;"><b>
&lt;html&gt;

&lt;head&gt;
<br><span style="background-color:#FF0;"> &lt;script src="brython.js"&gt;&lt;/script&gt;
</span>
<br> &lt;/head&gt;

&lt;body <span style="background-color:#FF0;">onload="brython()"</span>&gt;

&lt;script <span style="background-color:#FF0;">type="text/python"</span>&gt;
<br> from browser import alert
<br> alert('coucou !')
<br> &lt;/script&gt;

&lt;/body&gt;

&lt;/html&gt;
</b></pre>
</td>
<td>
<pre style="color:#FFF;padding:10px;width:330px;font-size:17px;"><b>
&nbsp;

&nbsp;
<br>charge Brython, met le nom **brython**
&nbsp;
<br>dans l'espace de noms Javascript

la fonction brython()
<br>- cherche les scripts avec le type
<br> "text/python"
<br>- traduit le code source Python
<br> en code Javascript
<br>- l'exécute par eval()

&nbsp;

&nbsp;
</b></pre>
</td>
</tr>
</table>

../..
Couverture de la syntaxe Python
===============================

**Brython vise une compatibilité à 100% avec Python**

- pas de place pour un nouveau langage intermédiaire entre Python et 
  Javascript
- alignement sur la Référence du Langage Python (syntaxe Python 3)

../..
Couverture de la syntaxe Python
===============================

**Brython vise une compatibilité à 100% avec Python**

- pas de place pour un nouveau langage intermédiaire entre Python et 
  Javascript
- alignement sur la Référence du Langage Python (syntaxe Python 3)

Couverture de tous les mots-clés (sauf `nonlocal`) et des fonctions et types
intégrés (sauf `memoryview` et `vars`)


../..
Couverture de la syntaxe Python
===============================

**Brython vise une compatibilité à 100% avec Python**

- pas de place pour un nouveau langage intermédiaire entre Python et 
  Javascript
- alignement sur la Référence du Langage Python (syntaxe Python 3)

Couverture de tous les mots-clés (sauf `nonlocal`) et des fonctions et types
intégrés (sauf `memoryview` et `vars`)

Brython supporte :

- toutes les variantes de `import` (y compris intra package)
- l'héritage multiple (algorithme C3)
- les métaclasses
- les compréhensions
- les générateurs, y compris `yield from`


../..

Couverture de la bibliothèque standard
======================================

Réutilisation de dizaines de modules de la distribution standard Python3 sans 
modification : `datetime, configparser, csv, decimal`, le package 
`unittest`...

Réécriture en Python ou en Javascript de modules écrits en C dans la 
distribution CPython

- ceux en Python sont copiés de PyPy

../..
Interface avec le navigateur
============================

Des modules spécifiques pour gérer l'interaction avec les éléments et les
événements DOM dans le package `browser`

Objets
------

- `document` : accès aux éléments de la page
- `window` : accès au navigateur (géoloc...) et à l'espace de noms 
   Javascript
- `alert` : message d'alerte

Modules
-------

- `browser.html` : balises HTML
- `browser.svg` : dessin vectoriel
- stockage local : `browser.local_storage`
- `browser.ajax`
../..
Quelques exemples
=================

Accès à un élément DOM

    <input id="trace">

Code Python

    from browser import document
    elt = document["trace"]

../..
Quelques exemples
=================

Attacher un gestionnaire d'événement

    <select id="pays">

Code Python

    from browser import document, alert
    
    def change_pays(ev):
        sel = ev.target
        alert(sel.options[sel.selectedIndex].value)
    
    document["pays"].bind('change', change_pays)

../..
Module `browser.html`
=====================

Construction d'une boite de sélection à partir d'une liste

    from browser import document, html
        
    pays = ['France', 'Italie', 'Russie']
    
    sel = html.SELECT()
    for _pays in pays:
        sel <= html.OPTION(_pays)
    
    document <= sel

`<=` équivaut à `appendChild()`

../..
Interface avec Javascript
=========================

Brython possède une interface pour utiliser les librairies Javascript,
par exemple :

- généralistes : `jQuery`
- UI : `jQueryUI`
- animations 3D : `three.js`
- éditeur de programmes : `ace`
- dessin vectoriel : `Raphael`
- graphes : `Highcharts`

Les espaces de noms Javascript et Brython sont strictement séparés

L'interface passe par l'objet `window` du module `browser`
../..
Accès depuis Brython aux librairies Javascript
==============================================

<pre style="background-color:#FFF;color:#2A4480;padding:10px;font-size:12px;width:450px;">
&lt;html&gt;
<br>&lt;head&gt;
<br>&lt;meta charset="utf-8"&gt;
<br><span style="background-color:yellow;">&lt;script src="raphael-min.js"&gt;&lt;/script&gt;</span>
<br>&lt;script type="text/javascript" src="/src/brython.js"&gt;&lt;/script&gt;
<br>&lt;/head&gt;

<br>&lt;body onload="brython()"&gt;

<br>&lt;script type="text/python"&gt;
<br><span style="background-color:yellow;">from browser import window
<br>bRaphael = window.Raphael</span>
<br>
<br>&#35; Creates canvas 320 × 200 at 10, 50
<br>paper = bRaphael(410, 50, 320, 200)
<br>
<br>&#35; Creates circle at x = 50, y = 40, with radius 10
<br>circle = paper.circle(50, 40, 10)
<br>&lt;/script&gt;
<br>
<br>&lt;/body&gt;
<br>&lt;/html&gt;
</pre>
../..
Accès depuis Javascript aux objets Python
=========================================

Appel d'une fonction Python depuis une balise

    <button onclick="info(this)">

La fonction `info` est insérée dans l'espace de noms Javascript via l'objet
`window`

    from browser import window
    
    def info(ev):
        alert("clic sur l'élement %s" %ev)
    
    window.info = info

../..
Performances
============
Au démarrage du projet, priorité donnée à la compatibilité Python sur la 
performance

Depuis #6 mois gros travaux d'optimisation (sans compromis sur la 
compatibilité)

<table>
<tr>
<td>Code</td>
<td>
    a = 0
    for i in range(10000000):
        a += 1
</td>

<td>
    a = [0]
    for i in range(1000000):
        a[0]= i
</td>
</tr>

<tr>
<td>Temps (ms)</td>
<td><img src="bench1.png" width="300"></td>
<td><img src="bench2.png" width="285"></td>
</tr>

</table>

... mais encore beaucoup de travail : 160 fois moins de pystones que CPython

../..
Tester Brython en ligne : éditeur
=======================

<img src="editor.png" height=430>

../..
Tester Brython en ligne : console
=======================

<img src="console.png" height=430>

../..
Tester Brython en ligne : galerie
=======================

<img src="gallery.png" height=430>

../..
Popularité
==========

Membres au 12/10/2014

- Brython : 211
- Skulpt : 171
- PyJS-users : 199
- PyJS-devel : 16
- RapydScript : 47
- PythonJS : 22

../..
Réponses à "python browser" sur Google
=====================================

<img src="google_python_browser.png" width="600">
../..
Comment contribuer ?
====================

Site de développement : [https://github.com/brython-dev/brython]
(https://github.com/brython-dev/brython)

- signaler des bugs
- proposer du code
- améliorer la doc

Participer aux discussions sur Google Group

- ça manque de Français !

Développer des applis en Brython et les faire connaitre

- par exemple améliorer ce moteur de présentation (Brython slideshow)
../..
pyschool.net
============

<img src="pyschool.png" width=750>

développé sur Github : brython-in-the-classroom

../..
Le mot de la fin...
===================

<img src="guido.png">
